{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/db.ts"],"sourcesContent":["import { promises as fs } from 'fs';\nimport path from 'path';\n\nexport interface User {\n  id: number;\n  username: string;\n  password: string;\n  role: 'admin' | 'user';\n  active: boolean;\n  questionsAnswered: number;\n  correctAnswers: number;\n  createdAt: string;\n}\n\nexport interface Question {\n  id: number;\n  subject: string;\n  question: string;\n  options: string[];\n  correctAnswer: number;\n  createdAt: string;\n}\n\nconst DATA_DIR = path.join(process.cwd(), 'data');\nconst USERS_FILE = path.join(DATA_DIR, 'users.json');\nconst QUESTIONS_FILE = path.join(DATA_DIR, 'questions.json');\n\nexport async function readUsers(): Promise<User[]> {\n  try {\n    const data = await fs.readFile(USERS_FILE, 'utf8');\n    return JSON.parse(data);\n  } catch (error) {\n    console.error('Error reading users file:', error);\n    return [];\n  }\n}\n\nexport async function writeUsers(users: User[]): Promise<boolean> {\n  try {\n    await fs.writeFile(USERS_FILE, JSON.stringify(users, null, 2));\n    return true;\n  } catch (error) {\n    console.error('Error writing users file:', error);\n    return false;\n  }\n}\n\nexport async function readQuestions(): Promise<Question[]> {\n  try {\n    const data = await fs.readFile(QUESTIONS_FILE, 'utf8');\n    return JSON.parse(data);\n  } catch (error) {\n    console.error('Error reading questions file:', error);\n    return [];\n  }\n}\n\nexport async function writeQuestions(questions: Question[]): Promise<boolean> {\n  try {\n    await fs.writeFile(QUESTIONS_FILE, JSON.stringify(questions, null, 2));\n    return true;\n  } catch (error) {\n    console.error('Error writing questions file:', error);\n    return false;\n  }\n}\n\nexport async function getUserById(id: number): Promise<User | null> {\n  const users = await readUsers();\n  return users.find(user => user.id === id) || null;\n}\n\nexport async function getUserByUsername(username: string): Promise<User | null> {\n  const users = await readUsers();\n  return users.find(user => user.username === username) || null;\n}\n\nexport async function updateUser(updatedUser: User): Promise<boolean> {\n  const users = await readUsers();\n  const index = users.findIndex(user => user.id === updatedUser.id);\n  \n  if (index === -1) {\n    return false;\n  }\n  \n  users[index] = updatedUser;\n  return await writeUsers(users);\n}\n\nexport async function addUser(newUser: Omit<User, 'id'>): Promise<User | null> {\n  const users = await readUsers();\n  const maxId = users.reduce((max, user) => Math.max(max, user.id), 0);\n  \n  const userWithId: User = {\n    ...newUser,\n    id: maxId + 1,\n  };\n  \n  users.push(userWithId);\n  const success = await writeUsers(users);\n  \n  return success ? userWithId : null;\n}\n\nexport async function addQuestion(newQuestion: Omit<Question, 'id'>): Promise<Question | null> {\n  const questions = await readQuestions();\n  const maxId = questions.reduce((max, question) => Math.max(max, question.id), 0);\n  \n  const questionWithId: Question = {\n    ...newQuestion,\n    id: maxId + 1,\n  };\n  \n  questions.push(questionWithId);\n  const success = await writeQuestions(questions);\n  \n  return success ? questionWithId : null;\n}\n\nexport async function getQuestionsBySubject(subject: string): Promise<Question[]> {\n  const questions = await readQuestions();\n  return questions.filter(question => question.subject === subject);\n}\n\nexport async function getAllSubjects(): Promise<string[]> {\n  const questions = await readQuestions();\n  const subjects = [...new Set(questions.map(question => question.subject))];\n  return subjects.sort();\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/auth.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'fallback_secret_key';\n\nexport interface TokenPayload {\n  userId: number;\n  username: string;\n  role: 'admin' | 'user';\n  iat?: number;\n  exp?: number;\n}\n\nexport function generateToken(payload: Omit<TokenPayload, 'iat' | 'exp'>): string {\n  try {\n    return jwt.sign(payload, JWT_SECRET, { expiresIn: '24h' });\n  } catch (error) {\n    console.error('Error generating token:', error);\n    throw new Error('Failed to generate authentication token');\n  }\n}\n\nexport function verifyToken(token: string): TokenPayload | null {\n  try {\n    const decoded = jwt.verify(token, JWT_SECRET) as TokenPayload;\n    return decoded;\n  } catch (error) {\n    console.error('Error verifying token:', error);\n    return null;\n  }\n}\n\nexport function decodeToken(token: string): TokenPayload | null {\n  try {\n    const decoded = jwt.decode(token) as TokenPayload;\n    return decoded;\n  } catch (error) {\n    console.error('Error decoding token:', error);\n    return null;\n  }\n}\n\n// Client-side token management\nexport const tokenManager = {\n  setToken: (token: string) => {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('auth_token', token);\n    }\n  },\n\n  getToken: (): string | null => {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('auth_token');\n    }\n    return null;\n  },\n\n  removeToken: () => {\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('auth_token');\n    }\n  },\n\n  isTokenValid: (token: string): boolean => {\n    try {\n      const decoded = decodeToken(token);\n      if (!decoded || !decoded.exp) return false;\n      \n      const currentTime = Math.floor(Date.now() / 1000);\n      return decoded.exp > currentTime;\n    } catch {\n      return false;\n    }\n  }\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAUtC,SAAS,cAAc,OAA0C;IACtE,IAAI;QACF,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,YAAY;YAAE,WAAW;QAAM;IAC1D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,SAAS,YAAY,KAAa;IACvC,IAAI;QACF,MAAM,UAAU,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;QAClC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;IACT;AACF;AAEO,SAAS,YAAY,KAAa;IACvC,IAAI;QACF,MAAM,UAAU,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC;QAC3B,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO;IACT;AACF;AAGO,MAAM,eAAe;IAC1B,UAAU,CAAC;QACT,uCAAmC;;QAEnC;IACF;IAEA,UAAU;QACR,uCAAmC;;QAEnC;QACA,OAAO;IACT;IAEA,aAAa;QACX,uCAAmC;;QAEnC;IACF;IAEA,cAAc,CAAC;QACb,IAAI;YACF,MAAM,UAAU,YAAY;YAC5B,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,EAAE,OAAO;YAErC,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK;YAC5C,OAAO,QAAQ,GAAG,GAAG;QACvB,EAAE,OAAM;YACN,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/auth/login/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { readUsers, writeUsers } from '@/lib/db';\nimport { generateToken, verifyToken } from '@/lib/auth';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { username, password } = await request.json();\n\n    if (!username || !password) {\n      return NextResponse.json(\n        { error: 'Username and password are required' },\n        { status: 400 }\n      );\n    }\n\n    const users = await readUsers();\n    const user = users.find(u => u.username === username && u.password === password);\n\n    if (!user) {\n      return NextResponse.json(\n        { error: 'Credenciais inv√°lidas' },\n        { status: 401 }\n      );\n    }\n\n    // Check if user is already active (single device restriction)\n    if (user.active) {\n      // Check if this login is from the same user with valid token\n      const authHeader = request.headers.get('authorization');\n      if (authHeader && authHeader.startsWith('Bearer ')) {\n        const token = authHeader.substring(7);\n        const payload = verifyToken(token);\n        if (payload && payload.userId === user.id) {\n          // Same user and valid token, allow login\n        } else {\n          return NextResponse.json(\n            { error: 'Este usu√°rio j√° est√° ativo em outro dispositivo' },\n            { status: 403 }\n          );\n        }\n      } else {\n        return NextResponse.json(\n          { error: 'Este usu√°rio j√° est√° ativo em outro dispositivo' },\n          { status: 403 }\n        );\n      }\n    }\n\n    // Set user as active\n    const updatedUsers = users.map(u => \n      u.id === user.id ? { ...u, active: true } : u\n    );\n    \n    await writeUsers(updatedUsers);\n\n    // Generate JWT token\n    const token = generateToken({\n      userId: user.id,\n      username: user.username,\n      role: user.role\n    });\n\n    // Return user data without password\n    const { password: _, ...userWithoutPassword } = user;\n\n    return NextResponse.json({\n      success: true,\n      token,\n      user: { ...userWithoutPassword, active: true }\n    });\n\n  } catch (error) {\n    console.error('Login error:', error);\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE(request: NextRequest) {\n  try {\n    const authHeader = request.headers.get('authorization');\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return NextResponse.json(\n        { error: 'Token de autoriza√ß√£o necess√°rio' },\n        { status: 401 }\n      );\n    }\n\n    const token = authHeader.substring(7);\n    const payload = verifyToken(token);\n\n    if (!payload) {\n      return NextResponse.json(\n        { error: 'Token inv√°lido' },\n        { status: 401 }\n      );\n    }\n\n    // Set user as inactive (logout)\n    const users = await readUsers();\n    const updatedUsers = users.map(u => \n      u.id === payload.userId ? { ...u, active: false } : u\n    );\n    \n    await writeUsers(updatedUsers);\n\n    return NextResponse.json({ success: true, message: 'Logout realizado com sucesso' });\n\n  } catch (error) {\n    console.error('Logout error:', error);\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}